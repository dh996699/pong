{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","node_modules/vm-browserify/index.js","src/partials/Ball.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","KEYS","a","z","up","down","spaceBar","r","PaddleOption","paddleWidth","paddleHeight","boardGap","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","line","appendChild","Paddle","boardHeight","x","y","colour","upKey","downKey","id","speed","score","keyState","addEventListener","event","key","Math","max","min","Ball","radius","boardWidth","direction","ping","Audio","pingSound","reset","vy","floor","random","vx","abs","hitLeft","hitRight","hitTop","hitBottom","player1","player2","play","playerColour2","setTimeout","playerColour1","player","console","log","paddleCollision","wallCollision","circle","rightGoal","leftGoal","goal","Score","size","text","winner","loser","textContent","Game","element","gameElement","getElementById","board","ball","score1","score2","pause","window","location","reload","innerHTML","render","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.f5aa91c9.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const KEYS = {\n    a: 'a',        // player 1 up key\n    z: 'z',        // player 1 down key\n    up: 'ArrowUp',       // player 2 up key\n    down: \"ArrowDown\",     // player 2 down key\n    spaceBar: \" \", // Use for Pause\n    r: 'r'  // Use for windows reload\n  }\n\n  export const PaddleOption = {\n    paddleWidth: 8,\n    paddleHeight: 56,\n    boardGap: 10,\n\n  }\n","import { SVG_NS } from \"../settings\";\n\nexport default class Board {\n    constructor(width, height) {\n      this.width = width;\n      this.height = height;\n    }\n    render(svg) {\n        let rect = document.createElementNS(SVG_NS, 'rect');\n        rect.setAttributeNS(null, 'fill', '#353535');\n        rect.setAttributeNS(null, 'width', this.width);\n        rect.setAttributeNS(null, 'height', this.height);\n\n        let line = document.createElementNS(SVG_NS, 'line');\n        line.setAttributeNS(null, 'x1', (this.width / 2));\n        line.setAttributeNS(null, 'y1', 0);\n        line.setAttributeNS(null, 'x2', (this.width / 2));\n        line.setAttributeNS(null, 'y2', this.height);\n\n        line.setAttributeNS(null, 'stroke', 'white');\n        line.setAttributeNS(null, 'stroke-dasharray', '20, 15');\n        line.setAttributeNS(null, 'stroke-width', '4');\n\n        svg.appendChild(rect);\n        svg.appendChild(line);\n    }\n  }","import { SVG_NS, KEYS } from \"../settings\";\n\nexport default class Paddle {\n  constructor(boardHeight, width, height, x, y, colour = 'white', upKey, downKey, id) {\n    this.boardHeight = boardHeight;\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.speed = 20;\n    this.score = 0;\n    this.colour = colour;\n    this.upKey = upKey;\n    this.downKey = downKey;\n    this.id = id;\n\n    this.keyState = {};\n\n    document.addEventListener(\"keydown\", event => {\n      this.keyState[event.key] = true;\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      this.keyState[event.key] = false;\n    });\n\n  }\n  \n  up(){\n\n    // this.y = this.y - this.speed;\n    this.y = Math.max (0, this.y - this.speed);\n    //-1 is less than 0 so the max value is always returned \n\n  }\n  \n\ndown(){\n  // this.y = this.y + this.speed;\n  this.y = Math.min (this.boardHeight - this.height, this.y + this.speed);\n\n\n}\n\n  render(svg) {\n\nif(this.keyState[KEYS.a] && this.upKey ===  KEYS.a){\n  this.up()\n}\n\n  if(this.keyState[KEYS.z] && this.downKey ===  KEYS.z){\n    this.down()\n  }\n    if(this.keyState[KEYS.up] && this.upKey ===  KEYS.up){\n      this.up()\n    }\n      if(this.keyState[KEYS.down] && this.downKey ===  KEYS.down){\n        this.down()\n\n      }\n\n        let rect = document.createElementNS(SVG_NS, 'rect');\n        rect.setAttributeNS(null, 'fill', this.colour);\n        rect.setAttributeNS(null, 'width', this.width);\n        rect.setAttributeNS(null, 'height', this.height);\n        rect.setAttributeNS(null, 'x', this.x);\n        rect.setAttributeNS(null, 'y', this.y);\n\n        \n\n        svg.appendChild(rect);\n    }\n  }","var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","import { SVG_NS } from \"../settings\";\nimport { runInThisContext } from \"vm\";\nimport { CLIENT_RENEG_LIMIT } from \"tls\";\nimport pingSound from \"../../public/sounds/pong-01.wav\";\n\n\nexport default class Ball {\n  constructor(radius, boardWidth, boardHeight, colour = 'white') {\n    this.radius = radius;\n    this.boardWidth = boardWidth;\n    this.boardHeight = boardHeight;\n    this.direction = 1;\n    this.colour = colour;\n    this.ping = new Audio(pingSound)\n\n    this.reset()\n  }\n\n  reset() {\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n\n    this.vy = 0\n    while (this.vy === 0) {\n      this.vy = Math.floor(Math.random() * 10 - 5);\n    }\n\n    // console.log(\"vy\", this.vy);\n    this.vx = this.direction * (6 - Math.abs(this.vy));\n    // console.log(\"vx\", this.vx);\n  }\n\n  wallCollision() {\n    const hitLeft = this.x - this.radius <= 0;\n    const hitRight = this.x + this.radius >= this.boardWidth;\n    const hitTop = this.y - this.radius <= 0;\n    const hitBottom = this.y + this.radius >= this.boardHeight;\n\n    if (hitLeft || hitRight) {\n      this.vx *= -1;\n    }\n    else if (hitTop || hitBottom) {\n      this.vy *= -1;\n    }\n\n  }\n\n  paddleCollision(player1, player2) {\n    //moving right\n    if (this.vx > 0) {\n      //collision detection for right paddle\n      if (this.x + this.radius >= player2.x && // right edge of the ball is >= left edge of the paddle\n        this.x + this.radius <= player2.x + player2.width && // right edge of the ball is <= right edge of the paddle\n        (this.y >= player2.y && this.y <= player2.y + player2.height) // ball Y is >= paddle top Y and <= paddle bottom Y\n      ) {\n        this.vx *= -1;\n        this.ping.play();\n\n\n            let playerColour2 = player2.colour;\n            player2.colour = 'green';\n            //change colour\n            setTimeout(function () {\n              //reset the color\n              player2.colour = playerColour2;\n            }, 200);\n            \n\n\n      }\n\n    } else {\n      if (this.x - this.radius <= player1.x + player1.width && // right edge of the ball is >= left edge of the paddle\n        this.x - this.radius >= player1.x && // right edge of the ball is <= right edge of the paddle\n        (this.y >= player1.y && this.y <= player1.y + player1.height) // ball Y is >= paddle top Y and <= paddle bottom Y\n      ) {\n        this.vx *= -1;\n        this.ping.play();\n\n\n        let playerColour1 = player1.colour;\n        player1.colour ='green';\n        //change colour\n        setTimeout (function(){\n          //reset the color\n          player1.colour = playerColour1;\n        }, 200);\n\n\n\n      }\n    }\n  }\n\n  goal(player) {\n    player.score++;\n    this.reset();\n    if (player.id === 1) {\n      console.log (\"Player \" + `${player.id}`+ \" score the point\");\n    }else if\n    (player.id ===2) {\n      console.log (\"Player \" + `${player.id}` + \" score the point\");\n    }\n  \n  { \n\n  }\n\n  }\n  render(svg, player1, player2) {\n    this.paddleCollision(player1, player2);\n    this.x += this.vx;\n    this.y += this.vy;\n    this.wallCollision()\n    let circle = document.createElementNS(SVG_NS, 'circle');\n    circle.setAttributeNS(null, 'r', this.radius);\n    circle.setAttributeNS(null, 'cx', this.x);\n    circle.setAttributeNS(null, 'cy', this.y);\n    circle.setAttributeNS(null, 'fill', this.colour);\n    svg.appendChild(circle);\n    const rightGoal = this.x + this.radius >= this.boardWidth;\n    const leftGoal = this.x - this.radius <= 0;\n\n    if (rightGoal) {\n\n      this.goal(player1);\n      this.direction = 1;\n    } else if (leftGoal) {\n      this.goal(player2);\n      this.direction = -1;\n    }\n\n\n  }\n}","import { SVG_NS } from \"../settings\";\n\nexport default class Score {\n    constructor(x, y, size) {\n      this.x = x; //location to display score\n      this.y = y; //location to display score\n      this.size = size;\n    }\n    render(svg, score) {\n\n        let text = document.createElementNS(SVG_NS, 'text');\n        text.setAttributeNS(null, 'x', this.x);\n        text.setAttributeNS(null, 'y', this.y);\n        text.setAttributeNS(null, 'font-family', \"'silkscreen web'\", 'monotype');\n        text.setAttributeNS(null, 'size', this.size);\n        text.setAttributeNS(null, 'winner', this.winner);\n        text.setAttributeNS(null, 'loser', this.loser);\n        text.setAttributeNS(null, 'fill', 'red');\n        text.textContent = score;\n        svg.appendChild(text);\n        \n      }\n\n    }\n\n","import Board from './Board';\nimport Paddle from './Paddle';\nimport Ball from './Ball';\nimport Score from './Score';\n// import Score from './Winner';\nimport { SVG_NS, KEYS, PaddleOption } from \"../settings\";\n\nexport default class Game {\n\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n\n\n    this.player1 = new Paddle(\n      this.height,\n      PaddleOption.paddleWidth,\n      PaddleOption.paddleHeight,\n      PaddleOption.boardGap,\n      ((this.height - PaddleOption.paddleHeight) / 2),\n      'yellow',\n      KEYS.a,\n      KEYS.z,\n      1\n    );\n\n    this.player2 = new Paddle(\n      this.height,\n      PaddleOption.paddleWidth,\n      PaddleOption.paddleHeight,\n      (this.width - (PaddleOption.boardGap + PaddleOption.paddleWidth)),//update this line to be 10px from the right\n      ((this.height - PaddleOption.paddleHeight) / 2),\n      'red',\n      KEYS.up,\n      KEYS.down,\n      2\n    );\n\n    this.ball = new Ball(8, this.width, this.height, 'white');\n    this.score1= new Score(this.width /2 - 50, 30, 30);\n    this.score2= new Score(this.width /2 + 50, 30, 30);\n    // this.winner= new Score(this.width /2 + this.height/2, 30, 30, \"winner\");\n\n    document.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case KEYS.spaceBar:\n          this.pause = !this.pause;\n          break;\n      }\n    });\n\n    document.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case KEYS.r:\n          window.location.reload(true);\n      }\n    });\n    \n\n  }\n\n  render() {\n    if (this.pause) {\n      return;\n    }\n    this.gameElement.innerHTML = ''; // clear the html before appending to fix a render bug 🐞\n    let svg = document.createElementNS(SVG_NS, \"svg\");\n    svg.setAttributeNS(null, \"width\", this.width);\n    svg.setAttributeNS(null, \"height\", this.height);\n    svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n    this.gameElement.appendChild(svg);\n    this.board.render(svg);\n    this.player1.render(svg);\n    this.player2.render(svg);\n    this.ball.render(svg, this.player1, this.player2);\n    this.score1.render(svg, this.player1.score);\n    this.score2.render(svg, this.player2.score);\n    \n  }\n}","import './styles/game.css';\nimport Game from './partials/Game';\n\n// create a game instance\nconst game = new Game('game', 512, 256);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();"]}